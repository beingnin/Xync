@model Xync.Web.Models.TrackingSummaryVM
@{
    ViewBag.Title = "Xync | MSSQL Server --> MongoDb";
}

<!-- WIDGET ROW -->
<div class="row">
    <div class="col-6">
        <div class="card app-widget app-widget--primary">
            <div class="card-body d-flex">
                <div class="app-widget__icon">
                    <img src="https://image.flaticon.com/icons/svg/861/861506.svg" alt="">
                </div>
                <div class="app-widget__desc flex-grow-1">
                    <h5 class="text-white">Total Mappings</h5>
                    <small class="text-white-50">
                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.
                        Eligendi nemo quas id tempore, doloremque
                    </small>
                </div>
                <div class="app-widget__count">
                    <h2 class="count">@Model.TotalMappings</h2>
                    <small class="text-white-50">mappings</small>
                </div>

            </div>
        </div>
    </div>
    <div class="col-3">
        <div class="card app-widget">
            <div class="card-body d-flex align-items-center justify-content-center">
                <img src="~/Content/images/dashboard-c1.png" />
            </div>
        </div>
    </div>
    <div class="col-3">
        <div class="card app-widget">
            <div class="card-body">
                <h6 class="text-primary m-0 mb-2">
                    <i class="icon">
                        <img src="https://image.flaticon.com/icons/svg/1509/1509289.svg" alt="">
                    </i>Mapping Direction
                </h6>
                <div class="d-flex">
                    <div class="flex-grow-1">
                        <small class="text-white badge badge-warning">From</small>
                       <p><small class="text-muted">@Model.RDBMSServer | @Model.RDBMSDatabase</small></p>
                    </div>
                    <div class="flex-grow-1">
                        <small class="text-white badge badge-success">To</small>
                        <p><small class="text-muted">@Model.MongoServer | @Model.MongoDatabase</small></p>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<!-- TABLE ROW -->
<div class="row mt-4">
    <div id="errorsContainer" class="col-8">
        @Html.Partial("_errors", Model.Events)
    </div>
    <div class="col-4">
        <div class="card app-event-mapping">
            <div class="card-header">
                <small class="text-uppercase">Mappings</small>
                <div class="btn-group float-right">
                    <button class="btn btn-sm btn-light rounded-circle text-muted">
                        <i class="fa fa-coins"></i>
                    </button>
                    <div class="btn-group ml-2">
                        <button class="btn btn-sm rounded-circle text-primary shadow-none" data-toggle="dropdown"><i class="fa fa-ellipsis-v"></i></button>
                        <div class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" href="#">Action</a>
                            <a class="dropdown-item" href="#">Action 1</a>
                            <a class="dropdown-item" href="#">Action 2</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body p-0">

                <table class="table table-hover table-sm app-table app-table--valign">
                    <thead>
                        <tr>
                            <th width="70">#</th>
                            <th>Schema</th>
                            <th>Table</th>
                            <th>Collection</th>
                            <th width="80">Status</th>
                            <th width="40"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Mappings.Count; i++)
                        {
                            var map = Model.Mappings[i];
                            <tr>
                                <td>@(i + 1)</td>
                                <td>@map.Schema</td>
                                <td>@map.Name</td>
                                <td>@map.Collection</td>
                                <td><small class="@(map.DNT?"text-danger":"text-success")">@(map.DNT ? "DNT" : "online")</small></td>
                                <td>
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-dark btn-sm btn-action dropdown-toggle" data-toggle="dropdown">Actions</button>
                                        <div class="dropdown-menu">
                                            <a class="dropdown-item" href="#">Stop</a>
                                            <a class="dropdown-item" href="#">Start</a>
                                            <a class="dropdown-item" href="#">Restart</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }


                    </tbody>
                </table>

            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        $(function () {
            $('body').on('click','#btnDeleteAllErrors',function() {
                $.ajax({
                    url: '/Home/DeleteAllErrors',
                    method: 'POST',
                    dataType: 'json',
                    success: (data) => {
                        app.message.success('deleted ' + data + ' errors permanently');
                        app.xync.errors.refresh();
                    }
                });
            });
            //refresh errors
            
            $('body').on('click', '#btnRefreshErrors',function(){
                app.xync.errors.refresh();
            });
            //delete an error
           
            $('body').on('click', '.btn-delete-error', function(e) {
                let id = $(e.currentTarget).data('id');
                $.ajax({
                    url: '/Home/DeleteError?id=' + id,
                    method: 'POST',
                    dataType: 'json',
                    success: (data) => {
                        app.message.success('deleted ' + data + ' errors permanently');
                        app.xync.errors.refresh();
                    },
                    error: function (err, xhr) {
                        app.message.error('Error', 'Sorrys');
                    }
                });
            });
            $('body').on('click', '.btn-copy-error', function (e) {
                let msg  = $(e.currentTarget).data('error');
                app.util.copy(msg);
            });
        });
    </script>
}